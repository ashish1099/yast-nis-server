/*
 * YaST2: Modules testsuite
 *
 * Description:
 *   Testsuite for the routines.ycp include
 *
 * Authors:
 *   Dan Vesely <dan@suse.cz>
 *
 * $Id$
 */

{
    // testedfiles: routines.ycp NisServer.ycp Testsuite.ycp

    include "testsuite.ycp";

    map READ_INIT = $[
	"target" : $[
	    "size"	: 0,
	],
    ];
    map EXEC_INIT = $[
	"target" : $[
	    "bash_output" : $[
	    ],
	],
    ];

    TESTSUITE_INIT ([READ_INIT, $[], EXEC_INIT], nil);

    import "NisServer";
    include "nis_server/routines.ycp";

    // converts values to boolean
    TEST (``(toboolean ("true")), [], nil);
    TEST (``(toboolean ("false")), [], nil);
    TEST (``(toboolean (1)), [], nil);
    TEST (``(toboolean (0)), [], nil);
    TEST (``(toboolean (true)), [], nil);
    TEST (``(toboolean (false)), [], nil);

    // all other values are false
    TEST (``(toboolean ([])), [], nil);
    TEST (``(toboolean ($[])), [], nil);
    TEST (``(toboolean (nil)), [], nil);
    TEST (``(toboolean (`symbol)), [], nil);

    DUMP ("getMaster");
    // no domain
    NisServer::domain = "";
    TEST (``(NisServer::getMaster ()), [], nil);
    // no map dir
    NisServer::domain = "testdomain";
    TEST (``(NisServer::getMaster ()), [], -1); // .target.size
    // no maps in dir
    map READ = $[
	"target": $[
	    "size":	42,
	    "dir":	[]
	    ]
	];
    TEST (``(NisServer::getMaster ()), [ READ ], nil);
    // no master entry in map
    READ = $[
	"target": $[
	    "size":	42,
	    "dir":	["map1", "map2"]
	    ]
	];
    map EXECFAIL = $[
	"target": $[
	    "bash_output": $[
		"exit": 1,
		"stdout": "",
		"stderr": ""
		],
	    ],
	];
    TEST (``(NisServer::getMaster ()), [ READ, $[], EXECFAIL ], nil);
    // all ok
    map EXEC1 = $[
	"target": $[
	    "bash_output": $[
		"exit": 0,
		"stdout": "YP_MASTER_NAME nismaster.foo.com\n",
		"stderr": ""
		],
	    ],
	];
    TEST (``(NisServer::getMaster ()), [ READ, $[], EXEC1 ], nil);

    // this test depends on the values of READ, EXEC1 and EXECFAIL set above!
    DUMP ("isYPMaster");
    // failure
    TEST (``(NisServer::isYPMaster ()), [ READ, $[], [ EXEC1, EXECFAIL] ], nil);
    // not a master
    map EXEC2 = $[
	"target": $[
	    "bash_output": $[
		"exit": 0,
		"stdout": "nisslave.foo.com\n",
		"stderr": ""
		],
	    ],
	];
    TEST (``(NisServer::isYPMaster ()), [ READ, $[], [ EXEC1, EXEC2] ], nil);
    // master
    EXEC2 = $[
	"target": $[
	    "bash_output": $[
		"exit": 0,
		"stdout": "nismaster.foo.com\n",
		"stderr": ""
		],
	    ],
	];
    TEST (``(NisServer::isYPMaster ()), [ READ, $[], [ EXEC1, EXEC2] ], nil);
}
