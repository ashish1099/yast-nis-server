/**
 *
 * File:
 *   master.ycp
 *
 * Module:
 *   Network/YPServer
 *
 * Summary:
 *   YPServer module.
 *
 * Authors:
 *   Dan Vesely <dan@suse.cz>
 *   Martin Vidner <mvidner@suse.cz>
 *
 * $Id$
 *
 * YPServer module part.
 *
 */


{

    textdomain "nis_server";

    import "Wizard";
    include "ui/common_popups.ycp";
    include "network/dns.ycp";

    include "nis_server/routines.ycp";

    /**
     * Master dialog
     * @return symbol `back, `abort, `next or `details
     */
    global define MasterDialog () ``{

	// help text 1/3
	string helptext = _("<p>Please enter a NIS <b>domain</b>. If this host is also a NIS client, check
the appropriate button.</p>");

	// help text 2/3
	helptext = helptext + _("<p>If you want slave servers to cooperate with this master, check the
button <i>Active Slave NIS server exists</i>. If you check the button
<i>Fast Map distribution</i> it will speed up the transfer of maps to the
slaves.</p>
");

	// help text 3/3
	helptext = helptext + _("<p><i>Allow changing of passwords</i> lets the users change their
passwords in the presence of NIS. Buttons to allow
changes of the login shell or GECOS (full name and related information) can
be used to set up these more specific options.</p>
");

	term pass_yes_buttons = `VBox ();
				// To translators: checkbox label
	pass_yes_buttons = add (pass_yes_buttons, `Left (`CheckBox (`id (`allow_shell), _("Allow changing of &GECOS field"),
				lookup (user_settings, ".rc.ypserver.YPPWD_CHFN", "no") == "yes")));
				// To translators: checkbox label
	pass_yes_buttons = add (pass_yes_buttons, `Left (`CheckBox (`id (`allow_gecos), _("Allow changing of login &shell"),
				lookup (user_settings, ".rc.ypserver.YPPWD_CHSH", "no") == "yes")));
	pass_yes_buttons = `HBox (`HSpacing (3), pass_yes_buttons);

	term pass_buttons = `VBox ();
	pass_buttons = add (pass_buttons, `VSpacing (0.3));
	pass_buttons = add (pass_buttons, `Left (`CheckBox (`id (`change_passwords), `opt (`notify),
							    // To translators: checkbox label
			    _("Allow changing of &passwords"),
			    lookup (user_settings, "start_yppasswdd", false))));
	pass_buttons = add (pass_buttons, `VSpacing (0.3));
	pass_buttons = add (pass_buttons, pass_yes_buttons);
	pass_buttons = add (pass_buttons, `VSpacing (0.3));
	pass_buttons = `HBox (`HSpacing (), pass_buttons);

	term domain_frame = `VBox ();
	domain_frame = add (domain_frame, `VSpacing (0.3));
	domain_frame = add (domain_frame, `TextEntry (`id (`domain), "",
						      lookup (user_settings, ".rc.system.YP_DOMAINNAME", "")));
	domain_frame = add (domain_frame, `VSpacing (0.3));
				// To translators: checkbox label
	domain_frame = add (domain_frame, `Left (`CheckBox (`id (`also_client), _("This host is also a NIS &client"),
							    lookup (user_settings, "start_ypbind", false))));
	domain_frame = add (domain_frame, `VSpacing (0.3));
	domain_frame = `HBox (`HSpacing (), domain_frame, `HSpacing (4));

	term contents = `VBox ();
	contents = add (contents, `VSpacing (0.5));
				// To translators: frame label
	contents = add (contents, `Frame (_("NIS &Domain Name"), domain_frame));
	contents = add (contents, `VSpacing (0.5));
				// To translators: checkbox label
	contents = add (contents, `HBox (`HSpacing (), `Left (`CheckBox (`id (`have_slave), _("Active Slave NIS server &exists"),
			! toboolean (lookup (user_settings, ".var.yp.makefile.NOPUSH", false))))));
	contents = add (contents, `VSpacing (0.5));
				// To translators: checkbox label
	contents = add (contents, `HBox (`HSpacing (),`Left (`CheckBox (`id (`fast_map), _("&Fast Map distribution (rpc.ypxfrd)"),
			lookup (user_settings, "start_ypxfrd", false)))));
	contents = add (contents, `VSpacing (0.5));
				// To translators: frame label
	contents = add (contents, `Frame (_("Changing of passwords"), pass_buttons));

	contents = `VBox (contents,
			  `VSpacing (0.5),
			  // To translators: pushbutton label
			  `PushButton (`id (`details), _("&Other global settings ...")));

	contents = `HBox (`HSpacing (4), contents, `HSpacing (6));

				// To translators: dialog label
	Wizard::SetContents (_("Network Information Service -- Master Server Setup"), contents, helptext, true, true);
	boolean a = lookup (user_settings, "start_yppasswdd", false);
	UI::ChangeWidget (`id (`allow_shell), `Enabled, a);
	UI::ChangeWidget (`id (`allow_gecos), `Enabled, a);

	symbol ui = nil;
	string error_msg = "";
	repeat
	{
	    error_msg = "";
	    ui = UI::UserInput ();

	    if (ui == `change_passwords)
	    {
		boolean enabled = UI::QueryWidget (`id (`change_passwords), `Value);
		UI::ChangeWidget (`id (`allow_shell), `Enabled, enabled);
		UI::ChangeWidget (`id (`allow_gecos), `Enabled, enabled);
	    }

	    else if (ui == `next)
	    {
		string domainname = UI::QueryWidget (`id (`domain), `Value);
				// To translators: error message
		error_msg = error_msg + ((check_domainname (domainname)) ? "" : _("Wrong domain!\n"));

		if (size (error_msg) > 0)
		{
		    UI::ErrorPopup (error_msg);
		}
	    }

	    if (ui == `abort && !UI::ReallyAbortPopup (true)) continue;
	}
	until ((ui == `next && size (error_msg) == 0) || contains ([`back, `abort, `details], ui));

	user_settings = add (user_settings, "start_ypbind", UI::QueryWidget (`id (`also_client), `Value));
	user_settings = add (user_settings, ".var.yp.makefile.NOPUSH",
			     sformat ("%1", ! UI::QueryWidget (`id (`have_slave), `Value)));
	user_settings = add (user_settings, ".rc.ypserver.YPPWD_CHFN",
			     UI::QueryWidget (`id (`allow_gecos), `Value) ? "yes" : "no");
	user_settings = add (user_settings, ".rc.ypserver.YPPWD_CHSH",
			     UI::QueryWidget (`id (`allow_shell), `Value) ? "yes" : "no");
	user_settings = add (user_settings, "start_yppasswdd",
			     UI::QueryWidget (`id (`change_passwords), `Value));
	user_settings = add (user_settings, "start_ypxfrd",
			     UI::QueryWidget (`id (`fast_map), `Value));
	user_settings = add (user_settings, ".rc.system.YP_DOMAINNAME", UI::QueryWidget (`id (`domain), `Value));

	return ui;
    }

}
